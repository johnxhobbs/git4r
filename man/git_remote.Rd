% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/git_remote.R
\name{git_remote}
\alias{git_remote}
\title{Git Edit Remotes}
\usage{
git_remote(repo_path = NULL, remote_index = NULL, remote_name = NULL)
}
\arguments{
\item{repo_path}{Path of repo to modify parents of, "" or "." for default current repo}

\item{remote_index}{Index of remote to edit / remove? (Integer vector or string)}

\item{remote_name}{Name of remote to add (string of format "name='/path/or/url'", or "" for \code{GIT_DEFAULT_REMOTE})}
}
\description{
View and interactively add or edit remotes for this repo or another. When
adding a local shared-drive remote, it will create a bare git repo in the
GIT_DEFAULT_REMOTE directory with the name of the current project.
}
\details{
Within git4r branches will always track the 'origin' remote.

Across your team, create a folder that you all have read/write permissions
to and nominate it as the location for all remotes using:
\code{Sys.setenv(GIT_DEFAULT_REMOTE='P:/ath/to/teams/remote_repo/folder')}
or better still, put this value in your settings with \code{file.edit('~/.Renviron')}

It is expected that a shared-drive folder 'origin' is used for all collaboration /
projects, which in turn may have its own 'origin' pointing to a cloud service.
This 'hybrid' is best achieved by using fully-fledged git installation set up
to synchronise as a scheduled task or somehow triggered. The shared-drive
remote repo can be overwritten with:
\itemize{
\item \verb{git clone --mirror <url>}
}

And then these commands run regularly will keep both in sync. If a branch gets
divergent commits between cloud and shared-drive, the latter will take precedence.
This has not been thoroughly tested and goes beyond the limitations of this
package!
\itemize{
\item \verb{git push}
\item \verb{git remote update --prune}
}
}
