% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/git_commit.R
\name{git_add}
\alias{git_add}
\title{Git Add}
\usage{
git_add(remove_index = NULL, add_index = NULL)
}
\arguments{
\item{remove_index}{Integer vector or character of file numbers to un-add?
(Use "" to keep all)}

\item{add_index}{Integer vector or character of file numbers to add?
(Use "" to add all non-conflicting)}
}
\value{
Invisible NULL
}
\description{
Prints all changed files since last commit and waits for you to hit
ENTER to add everything, or type out the space-separated numbers of
what you do want to add to the next commit, else ESCAPE to cancel. It
is highly recommended that you call without any arguments - \code{git_add()}
}
\details{
Files can be specified by number by typing a list of space-separated
values. The inverse can also be used, for example "-2 -4" would add
(or remove)

Each file or directory is given a symbol for change type:
\itemize{
\item \code{-} has been deleted
\item \code{+} has been created
\item \code{*} has been changed since git_add() was last called and should be re-added
\item \code{@} has been renamed, but this will often show as a pair of \code{+} and \code{-}
\item \verb{?} contains conflict from latest merge; go in and edit by hand, searching
for "<<<<<<< HEAD" up to ">>>>>>> (some branch)"
}

Arguments can be given which are the character or integer answer to the
interactive questions asked. It is highly recommended that you do not rely
on passing arguments because it is operating blind.
}
