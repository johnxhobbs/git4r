% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/git_history.R
\name{git_checkout}
\alias{git_checkout}
\title{Git Checkout Commit}
\usage{
git_checkout(commit, onto_new_branch, force = FALSE)
}
\arguments{
\item{commit}{Commit hash or other identifier, as passed to git_get()}

\item{onto_new_branch}{Call git_branch() immediately to make a new active branch
(otherwise will be left HEAD-less -- not on a branch at all!)}

\item{force}{Allow all changes since last commit to be irreversibly deleted}
}
\description{
Rewind the entire working directory to a previous commit or a different branch. Use
this if you have made changes which you want to remove and start trying something
else on a new branch. See \code{git_undo()} if you wish to irreversibly wind-back the
current branch.
}
\details{
As with changing branch, it is forbidden to change with changes yet-to-be-committed.
This is to prevent irreversible loss if you ever wanted to change back again.

There is currently no option to checkout a specific file, however this can be
done by calling git_diff() and finding the named 'git4r_abc123' in
\code{tempdir()}
}
\seealso{
git_history, git_diff, git_undo
}
